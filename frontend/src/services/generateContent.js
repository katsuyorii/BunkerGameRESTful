import axios from 'axios';

export async function generateContent(category) {
    let content;

    try {
        const response = await axios.get(`http://127.0.0.1:8000/api/v1/${category}/`);
        const data = response.data;

        switch (category) {
            case 'bunker':
                content = (
                    <>
                        <p>üìõ –ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –±—É–Ω–∫–µ—Ä–∞: {data.title}</p>
                        <p>üìú –û–ø–∏—Å–∞–Ω–∏–µ –±—É–Ω–∫–µ—Ä–∞: {data.description}</p>
                        <p>üì¶ –ü—Ä–µ–¥–º–µ—Ç—ã –≤ –±—É–Ω–∫–µ—Ä–µ:</p>
                        {data.items.map((item, index) => (
                            <li class="item-li" key={index}> - {item.name}</li>
                        ))}
                        <p>üè† –ö–æ–º–Ω–∞—Ç—ã –≤ –±—É–Ω–∫–µ—Ä–µ:</p> 
                        {data.rooms.map((room, index) => (
                            <li class="item-li" key={index}> - {room.name}</li>
                        ))}
                        <p>üìê –ü–ª–æ—â–∞–¥—å –±—É–Ω–∫–µ—Ä–∞: {data.area} –∫–≤.–º.</p>
                        <p>ü•ï –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –µ–¥—ã –≤ –±—É–Ω–∫–µ—Ä–µ: {data.sup_food_month} –º–µ—Å.</p>
                    </>
                )
                break;
            case 'catastrophe':
                content = (
                    <>
                        <p>üí• –ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –∫–∞—Ç–∞—Å—Ç—Ä–æ—Ñ—ã: {data.title}</p>
                        <p>üìú –û–ø–∏—Å–∞–Ω–∏–µ –∫–∞—Ç–∞—Å—Ç—Ä–æ—Ñ—ã: {data.description}</p>
                        <p>üöß –ü—Ä–æ—Ü–µ–Ω—Ç —Ä–∞–∑—Ä—É—à–µ–Ω–∏—è –Ω–∞ –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏: {data.perc_destruction}%</p>
                        <p>‚ò†Ô∏è –ü—Ä–æ—Ü–µ–Ω—Ç –≤—ã–∂–∏–≤—à–∏—Ö –ª—é–¥–µ–π –Ω–∞ –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏: {data.perc_survivors}%</p>
                    </>
                )
                break;
            case 'character':
                content = (
                    <>
                        <p >üë® –ü–æ–ª, –≤–æ–∑—Ä–∞—Å—Ç: {data.gender}, {data.age}, {data.fertility}</p >
                        <p>üíº –ü—Ä–æ—Ñ–µ—Å—Å–∏—è, —Å—Ç–∞–∂ (–ª–µ—Ç.): {data.profession.name}, {data.profession.exp}</p>
                        <p>üè• –°–æ—Å—Ç–æ—è–Ω–∏–µ –∑–¥–æ—Ä–æ–≤—å—è: {data.health.name}</p>
                        <p>üé® –•–æ–±–±–∏: {data.hobby.name}</p>
                        <p>üëª –§–æ–±–∏—è: –∞–∫–≤–∞—Ñ–æ–±–∏—è - {data.phobia.name}</p>
                        <p>üóø –ß–µ–ª–æ–≤–µ—á–µ—Å–∫–∞—è —á–µ—Ä—Ç–∞: {data.trait.name}</p>
                        <p>üí™ –¢–µ–ª–æ—Å–ª–æ–∂–µ–Ω–∏–µ: {data.physique.name}</p>
                        <p>üéí –ë–∞–≥–∞–∂: {data.baggage.name}</p>
                        <p>üìú –î–æ–ø. –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è: {data.additional_info.description}</p>
                        <p>‚ú® –°–ø–µ—Ü. –¥–µ–π—Å—Ç–≤–∏–µ ‚Ññ1: {data.special_action_one.description}</p>
                        <p>‚ú® –°–ø–µ—Ü. –¥–µ–π—Å—Ç–≤–∏–µ ‚Ññ2: {data.special_action_two.description}</p>
                    </>
                );
                break;
            case 'gender':
                content = (
                    <p>üë® –ü–æ–ª, –≤–æ–∑—Ä–∞—Å—Ç: {data.gender}, {data.age}, {data.fertility}</p>
                );
                break;
            case 'health':
                content = (
                    <p>üè• –°–æ—Å—Ç–æ—è–Ω–∏–µ –∑–¥–æ—Ä–æ–≤—å—è: {data.name}</p>
                );
                break;
            case 'profession':
                content = (
                    <p>üíº –ü—Ä–æ—Ñ–µ—Å—Å–∏—è: {data.name}, {data.exp}</p>
                );
                break;
            case 'hobby':
                content = (
                    <p>üé® –•–æ–±–±–∏: {data.name}</p>
                );
                break;
            case 'phobia':
                content = (
                    <p>üëª –§–æ–±–∏—è: {data.name}</p>
                );
                break;
            case 'trait':
                content = (
                    <p>üóø –ß–µ–ª–æ–≤–µ—á–µ—Å–∫–∞—è —á–µ—Ä—Ç–∞: {data.name}</p>
                );
                break;
            case 'physique':
                content = (
                    <p>üí™ –¢–µ–ª–æ—Å–ª–æ–∂–µ–Ω–∏–µ: {data.name}</p>
                );
                break;
            case 'baggage':
                content = (
                    <p>üéí –ë–∞–≥–∞–∂: {data.name}</p>
                );
                break;
            case 'info':
                content = (
                    <p>üìú –î–æ–ø. –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è: {data.description}</p>
                );
                break;
            case 'rooms':
                content = (
                    <>
                    <p>üè† –ö–æ–º–Ω–∞—Ç—ã –≤ –±—É–Ω–∫–µ—Ä–µ:</p> 
                    {data.map((room, index) => (
                        <li class="item-li" key={index}> - {room.name}</li>
                    ))}
                    </>
                );
                break;
            case 'items':
                content = (
                    <>
                    <p>üì¶ –ü—Ä–µ–¥–º–µ—Ç—ã –≤ –±—É–Ω–∫–µ—Ä–µ:</p> 
                    {data.map((item, index) => (
                        <li class="item-li" key={index}> - {item.name}</li>
                    ))}
                    </>
                );
                break;
            default:
                content = '';
        }

    } catch (error) {
        console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ —Å–Ω–æ–≤–∞!:`, error);
    }

    return content;
};